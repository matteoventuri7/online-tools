@page "/rrule"
@inject QueryStringService QueryStringService

<h1>Recurrence Rule (RFC 5545)</h1>
<p><a href="https://icalendar.org/iCalendar-RFC-5545/3-8-5-3-recurrence-rule.html">Recurrence Rule documentation</a></p>

<input class="form-control code" list="RecurrenceRuleSamples" @bind="Text" spellcheck="false" />
<datalist id="RecurrenceRuleSamples">
    <option>FREQ=DAILY;INTERVAL=1</option>
    <option>FREQ=WEEKLY;BYDAY=FR;INTERVAL=2</option>
    <option>FREQ=MONTHLY;BYMONTHDAY=1;INTERVAL=1</option>
    <option>FREQ=MONTHLY;BYSETPOS=-1;BYDAY=MO,TU,WE,TH,FR;INTERVAL=1</option>
</datalist>

<div>
    <button class="btn btn-secondary" @onclick="Compute">Get occurences</button>
</div>

@if (result != null)
{
<pre class="result">@result</pre>
}

@code {
    [QueryStringParameter]
    public string Text { get; set; } = "FREQ=DAILY;INTERVAL=1";

    string result;

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        QueryStringService.SetParametersFromQueryString(this);
        await base.SetParametersAsync(parameters);
        await Compute();
    }

    async Task Compute()
    {
        try
        {
            var schedule = Meziantou.Framework.Scheduling.RecurrenceRule.Parse(Text);
            result = string.Join("\n", schedule.GetNextOccurrences(DateTime.Now).Take(50));
        }
        catch (Exception ex)
        {
            result = ex.Message;
        }

        await QueryStringService.UpdateQueryString(this, reloadPage: false);
    }
}